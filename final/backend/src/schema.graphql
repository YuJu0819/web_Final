type Mutation {
  createAccount(account: String!, password: String!, name: String!): User
  signAccount(account: String!, password: String!): User
  selectCharacter(character: String!, account: String!): User!
}

type Query {
  user(account: String!): User
  cards(character: String!): [Int!]
  skill(character: String!): String!
}

type createType {
  detect: String!
}

type Character {
  id: String!
  cards: [Int]
  skill: String
}

type Subscription {
  gaming(p1: String!, p2: String): Room!
}

type User {
  account: String!
  password: String!
  name: String!
  winlose: [Boolean]
  character: String
  roomnumber: Int
}

type Room {
  id: String!
}
